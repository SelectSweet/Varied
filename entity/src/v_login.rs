//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "v_login")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub username: String,
    #[sea_orm(column_type = "Text")]
    pub loggedin: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::v_account::Entity",
        from = "Column::Username",
        to = "super::v_account::Column::Username",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    VAccount,
}

impl Related<super::v_account::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::VAccount.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
